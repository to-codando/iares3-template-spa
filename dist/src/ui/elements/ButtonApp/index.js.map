{
  "version": 3,
  "sources": ["../../../../../src/frontend/ui/elements/ButtonApp/index.ts"],
  "sourcesContent": ["import type {\n\tContextElement,\n\tGenericObject,\n\tHTMX,\n\tState,\n\tStateManager,\n\tTaggedStyle,\n\tTaggedTemplate,\n} from \"iares\";\n\ntype Handler = () => number;\n\ntype Props = {\n\tlabel: string;\n\thandler: Handler;\n\tcolor: string;\n};\n\ntype Model = State<{ label: string }>;\n\ntype StylesParams = {\n\tprops: Props;\n\tstate: Model;\n\tcss: TaggedStyle;\n};\n\ntype Styles = { button: string; text: string };\n\ntype Actions = {\n\tincrement: () => void;\n};\n\ntype TemplateParams = {\n\tprops: Props;\n\tstate: Model;\n\tactions: Actions;\n\tstyles: Styles;\n\thtml: HTMX;\n};\n\ntype Injections = GenericObject<{\n\tactions: Actions;\n\tstyles: Styles;\n}>;\n\ntype TemplateInjections = () => Injections;\n\ntype StyleHandler = () => GenericObject;\n\ntype UseStyle = (styleHandler: StyleHandler) => string;\n\ntype UseTemplate = (\n\ttemplateHandler: TemplateHandler,\n\ttemplateinjections?: TemplateInjections,\n) => TaggedTemplate;\n\ntype UseState = <T = Model>(initialState: T) => StateManager<T>;\n\ntype TemplateHandler = (\n\tparams: TemplateParams,\n\tinjections: TemplateInjections,\n) => TaggedTemplate;\n\ntype Params = {\n\tprops: Props;\n\tuseState: UseState;\n\tuseStyle: UseStyle;\n\tuseTemplate: UseTemplate;\n\telement: ContextElement;\n};\n\nconst template = (params: TemplateParams): TaggedTemplate => {\n\tconst { props, state, styles, html } = params;\n\n\treturn html`\n      <div class=${styles.button} onClick=${props.handler}>\n        <span> ${state.label}</span>\n      </div>\n    ` as TaggedTemplate;\n};\n\nexport const ButtonApp = (params: Params) => {\n\tconst { useState, useStyle, useTemplate } = params;\n\tuseState({ label: \"Teste\" });\n\tuseStyle(createStyles);\n\treturn useTemplate(template);\n};\n\nconst createStyles = () => ({\n\tButtonApp: ({ props, css }: StylesParams) => css`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    width:100%;\n    color: #ebebeb;\n    padding: 15px 30px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    font-size: 16px;\n    background:#6593d9; \n\n  .wrap > span {  padding: 10px; background:red }\n\n  &:hover {\n    background: #fff ;\n  }\n\n`,\n});\n"],
  "mappings": ";;;;AAuEA,IAAM,WAAW,wBAAC,WAA2C;AAC5D,QAAM,EAAE,OAAO,OAAO,QAAQ,KAAK,IAAI;AAEvC,SAAO;AAAA,mBACW,OAAO,MAAM,YAAY,MAAM,OAAO;AAAA,iBACxC,MAAM,KAAK;AAAA;AAAA;AAG5B,GARiB;AAUV,IAAM,YAAY,wBAAC,WAAmB;AAC5C,QAAM,EAAE,UAAU,UAAU,YAAY,IAAI;AAC5C,WAAS,EAAE,OAAO,QAAQ,CAAC;AAC3B,WAAS,YAAY;AACrB,SAAO,YAAY,QAAQ;AAC5B,GALyB;AAOzB,IAAM,eAAe,8BAAO;AAAA,EAC3B,WAAW,wBAAC,EAAE,OAAO,IAAI,MAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;AAqBZ,IAtBqB;",
  "names": []
}
