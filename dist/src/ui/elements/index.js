var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// src/frontend/ui/elements/ButtonApp/index.ts
var template = /* @__PURE__ */ __name((params) => {
  const { props, state, styles, html } = params;
  return html`
      <div class=${styles.button} onClick=${props.handler}>
        <span> ${state.label}</span>
      </div>
    `;
}, "template");
var ButtonApp = /* @__PURE__ */ __name((params) => {
  const { useState, useStyle, useTemplate } = params;
  useState({ label: "Teste" });
  useStyle(createStyles);
  return useTemplate(template);
}, "ButtonApp");
var createStyles = /* @__PURE__ */ __name(() => ({
  ButtonApp: /* @__PURE__ */ __name(({ props, css }) => css`
    display:flex;
    justify-content:center;
    align-items:center;
    width:100%;
    color: #ebebeb;
    padding: 15px 30px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s;
    font-size: 16px;
    background:#6593d9; 

  .wrap > span {  padding: 10px; background:red }

  &:hover {
    background: #fff ;
  }

`, "ButtonApp")
}), "createStyles");

// src/frontend/ui/elements/TimerApp/index.ts
var template2 = /* @__PURE__ */ __name((params) => {
  const { state, styles, html } = params;
  const timeLeft = Number(state.timeLeft);
  return html`

    <div class="timer"> 
      <span>A simple counter</span>
      <span>${timeLeft <= 9 && "0"}${timeLeft || "0"}s</span>
    </div>
    `;
}, "template");
var createStateHandler = /* @__PURE__ */ __name((params) => {
  const { state, seconds } = params;
  return () => {
    const { timeLeft } = state.get();
    if (!timeLeft) return;
    state.set({ timeLeft: timeLeft - seconds });
  };
}, "createStateHandler");
var createStateWatcher = /* @__PURE__ */ __name(({ oneSecond, timer }) => ({ timeLeft }) => {
  if (timeLeft < oneSecond) {
    clearTimeout(timer);
  }
}, "createStateWatcher");
var TimerApp = /* @__PURE__ */ __name(({ useState, useStyle, useTemplate }) => {
  const state = useState({ timeLeft: 120 });
  useStyle(createStyles2);
  const oneSecond = 1;
  const cycleTime = 1e3;
  const stateHandler = createStateHandler({ state, seconds: oneSecond });
  const timer = setTimeout(stateHandler, cycleTime);
  const stateWatcher = createStateWatcher({ oneSecond, timer });
  state.watch(stateWatcher);
  return useTemplate(template2);
}, "TimerApp");
var createStyles2 = /* @__PURE__ */ __name(() => ({
  TimerApp: /* @__PURE__ */ __name(({ css }) => css`
      display:flex;
      width:100%;
      justify-content:center;

    .timer {
      background:#b9c5ec;
      padding:15px;
      border-radius:8px;
    }

    .timer span { 
      color: #2072ba; 
      font-size: 1em; 
    }

    .timer span + span {
        font-weight:bold;
        font-size: 2em
      }

    .timer span:first-of-type {
        margin-bottom:1em
      }
   
`, "TimerApp")
}), "createStyles");
export {
  ButtonApp,
  TimerApp
};
//# sourceMappingURL=data:application/json;base64,
